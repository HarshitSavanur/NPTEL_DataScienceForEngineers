source("D:/Harshith/RVCE/Fourth Sem/NPTEL Data Science/NPTEL-Data-Science-for-Engineers-main/7_Week/4_iris.r", echo=TRUE)
# Find the dimensions of the dataframe
dim(irisdata)
# Create a directory to save the plots (adjust the path as needed)
plot_dir <- "plots/"
dir.create(plot_dir, showWarnings = FALSE)
# Create a subset of the dataframe containing only independent variables
independent_vars <- irisdata %>%
select(-Species) # Exclude the dependent variable
# Visualize the distributions of the independent variables
# You can use histograms or other plots based on your preference
histogram_plots <- lapply(names(independent_vars), function(var_name) {
p <- ggplot(independent_vars, aes_string(x = var_name)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of", var_name))
# Save the plot as a PNG file
ggsave(filename = paste0(plot_dir, var_name, "_histogram.png"), plot = p, width = 6, height = 4, dpi = 300)
})
# Find no. of rows in the dataset that contain missing values
# Hint: Use the function is.na()
print("No. of rows with missing values")
sum(is.na(irisdata))
# finding the mean of the columns PetalLength and PetalWidth in one line
print("Mean of PetalLength and PetalWidth")
lapply(irisdata[, 3:4], mean)
apply(irisdata[, 3:4], 2, mean) # 2 is for column wise
library(caret) # for confusionMatrix
library(ggplot2)
library(dplyr)
irisdata <- read.csv("iris.csv", row.names = 1)
irisdata$Species <- as.factor(irisdata$Species)
# View the data
View(irisdata)
head(irisdata)
# Find the dimensions of the dataframe
dim(irisdata)
# Create a directory to save the plots (adjust the path as needed)
plot_dir <- "plots/"
dir.create(plot_dir, showWarnings = FALSE)
# Create a subset of the dataframe containing only independent variables
independent_vars <- irisdata %>%
select(-Species) # Exclude the dependent variable
img <- readPNG("plots/Sepal.Length_histogram.png")
dir.create(plot_dir, showWarnings = FALSE)
img <- readPNG("plots/Sepal.Length_histogram.png")
# Display the image
grid.raster(img)
# Create a directory to save the plots (adjust the path as needed)
plot_dir <- "plots/"
dir.create(plot_dir, showWarnings = FALSE)
# Create a subset of the dataframe containing only independent variables
independent_vars <- irisdata %>%
select(-Species) # Exclude the dependent variable
# Visualize the distributions of the independent variables
# You can use histograms or other plots based on your preference
histogram_plots <- lapply(names(independent_vars), function(var_name) {
p <- ggplot(independent_vars, aes_string(x = var_name)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of", var_name))
# Save the plot as a PNG file
ggsave(filename = paste0(plot_dir, var_name, "_histogram.png"), plot = p, width = 6, height = 4, dpi = 300)
})
img <- readPNG("plots/_histogram.png")
source("D:/Harshith/RVCE/Fourth Sem/NPTEL Data Science/NPTEL-Data-Science-for-Engineers-main/7_Week/4_iris.r", echo=TRUE)
# Assignment Question
install.packages("png")
# Assignment Question
install.packages("png")
install.packages("grid")
library(png)
library(grid)
library(caret) # for confusionMatrix
library(ggplot2)
library(dplyr)
irisdata <- read.csv("iris.csv", row.names = 1)
irisdata$Species <- as.factor(irisdata$Species)
# View the data
View(irisdata)
head(irisdata)
# Find the dimensions of the dataframe
dim(irisdata)
# Create a directory to save the plots (adjust the path as needed)
plot_dir <- "plots/"
dir.create(plot_dir, showWarnings = FALSE)
# Create a subset of the dataframe containing only independent variables
independent_vars <- irisdata %>%
select(-Species) # Exclude the dependent variable
# Visualize the distributions of the independent variables
# You can use histograms or other plots based on your preference
histogram_plots <- lapply(names(independent_vars), function(var_name) {
p <- ggplot(independent_vars, aes_string(x = var_name)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = paste("Distribution of", var_name))
# Save the plot as a PNG file
ggsave(filename = paste0(plot_dir, var_name, "_histogram.png"), plot = p, width = 6, height = 4, dpi = 300)
})
img <- readPNG("plots/_histogram.png")
# Display the image
grid.raster(img)
# List files in the 'plots/' directory
list.files("plots/")
# List files in the 'plots/' directory
# Load the necessary libraries
library(ggplot2)
# Plot histograms
ggplot(irisdata, aes(x = SepalLength)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Sepal Length")
ggplot(irisdata, aes(x = SepalWidth)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Sepal Width")
# Find no. of rows in the dataset that contain missing values
# Hint: Use the function is.na()
print("No. of rows with missing values")
sum(is.na(irisdata))
# finding the mean of the columns PetalLength and PetalWidth in one line
print("Mean of PetalLength and PetalWidth")
# Plot histogram for Sepal Length
ggplot(irisdata, aes(x = SepalLength)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Sepal Length") +
ggsave(filename = paste0(plot_dir, "SepalLength_histogram.png"), width = 6, height = 4, dpi = 300)
# Plot histogram for Sepal Width
ggplot(irisdata, aes(x = SepalWidth)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Sepal Width") +
ggsave(filename = paste0(plot_dir, "SepalWidth_histogram.png"), width = 6, height = 4, dpi = 300)
# Q-Q Plot for Sepal Length
qqnorm(irisdata$SepalLength, main = "Q-Q Plot of Sepal Length")
qqline(irisdata$SepalLength, col = "red")
ggsave(filename = paste0(plot_dir, "SepalLength_qqplot.png"), plot = last_plot(), width = 6, height = 4, dpi = 300)
# Q-Q Plot for Sepal Width
qqnorm(irisdata$SepalWidth, main = "Q-Q Plot of Sepal Width")
qqline(irisdata$SepalWidth, col = "red")
ggsave(filename = paste0(plot_dir, "SepalWidth_qqplot.png"), plot = last_plot(), width = 6, height = 4, dpi = 300)
# Perform Shapiro-Wilk test for Sepal Length
shapiro_length <- shapiro.test(irisdata$SepalLength)
print("Shapiro-Wilk Test for Sepal Length:")
print(shapiro_length)
# Perform Shapiro-Wilk test for Sepal Width
shapiro_width <- shapiro.test(irisdata$SepalWidth)
print("Shapiro-Wilk Test for Sepal Width:")
print(shapiro_width)
# Plot histogram for Petal Length
ggplot(irisdata, aes(x = PetalLength)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Petal Length") +
ggsave(filename = "plots/PetalLength_histogram.png", width = 6, height = 4, dpi = 300)
# Q-Q Plot for Petal Length
qqnorm(irisdata$PetalLength, main = "Q-Q Plot of Petal Length")
# Load necessary library
library(ggplot2)
# Plot histogram for Petal Length
ggplot(irisdata, aes(x = PetalLength)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Petal Length") +
ggsave(filename = "plots/PetalLength_histogram.png", width = 6, height = 4, dpi = 300)
# Plot histogram for Petal Length
ggplot(irisdata, aes(x = PetalLength)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Petal Length") +
ggsave(filename = "PetalLength_histogram.png", width = 6, height = 4, dpi = 300)
# Plot histogram for Petal Length
hist_plot <- ggplot(irisdata, aes(x = PetalLength)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Petal Length")
ggsave(filename = paste0(plot_dir, "PetalLength_histogram.png"), plot = hist_plot, width = 6, height = 4, dpi = 300)
# Plot histogram for Petal Length
hist_plot <- ggplot(irisdata, aes(x = PetalLength)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Petal Length")
ggsave(filename = paste0(plot_dir, "PetalLength_histogram.png"), plot = hist_plot, width = 6, height = 4, dpi = 300)
# Q-Q Plot for Petal Length
qq_plot <- qqnorm(irisdata$PetalLength, main = "Q-Q Plot of Petal Length")
qqline(irisdata$PetalLength, col = "red")
ggsave(filename = paste0(plot_dir, "PetalLength_qqplot.png"), plot = last_plot(), width = 6, height = 4, dpi = 300)
# Shapiro-Wilk Test for Petal Length
shapiro_petal_length <- shapiro.test(irisdata$PetalLength)
print("Shapiro-Wilk Test for Petal Length:")
print(shapiro_petal_length)
